$(document).ready(function () {
  var profileMini = {
    timeout: 0,
    clickable: false,
    rootElement: null,
    targetElement: null,
    rootId: 'profile-mini-root',
    rootSelector: '#profile-mini-root',
    userNameSelector: "a[href*='profiles.php?XID=']:not(.mce-content-body *)",
    contentWrapper: '#mainContainer, #chatRoot, #header-root',

    setClickable: function (value) {
      this.clickable = value
    },

    setRootElement: function () {
      if (!document.getElementById(this.rootId)) {
        this.rootElement = document.createElement('div');
        this.rootElement.classList.add(this.rootId);
        this.rootElement.id = this.rootId;
        $('body').append(this.rootElement);
        this.rootElement = ReactDOM.createRoot(this.rootElement)
      } else {
        this.rootElement.unmount();
        this.rootElement = ReactDOM.createRoot(document.getElementById(this.rootId));
      }
    },

    subscribeForHideListeners: function () {
      var that = this;
      var width = $(window).width();

      function handleResize(e) {
        if ($(this).width() !== width) {
          width = $(this).width();
          hideMiniProfile.call(that, e);
        }
      }

      function handleScroll(e) {
        if (!document.activeElement.classList.contains('send-cash-input')) {
          hideMiniProfile.call(that, e);
        }
      }

      function hideMiniProfile(e) {
        if ($(e.target).closest(this.rootSelector).length === 0 || ['resize', 'scroll'].includes(e.type)) {
          that.targetElement = null
          that.rootElement.unmount();
          $(this.userNameSelector).off('click', this.handleUserNameClick);
          $(this.userNameSelector).unbind('contextmenu');
          $(document).off('click', hideMiniProfile);
          $(window).off('hashchange', hideMiniProfile);
          $(window).off('resize', handleResize);
          $(window).off('scroll', handleScroll);
        }
      }

      $(document).on('click', hideMiniProfile.bind(this));
      $(window).on('hashchange', hideMiniProfile.bind(this));
      $(window).on('resize', handleResize);

      if (that.targetElement.closest('#chatRoot')) {
        $(window).on('scroll', handleScroll);
      }
    },

    subscribeForUserNameClick: function () {
      $(this.userNameSelector).click(this.handleUserNameClick.bind(this))
    },

    handleUserNameClick: function () {
      if (!this.clickable) {
        this.setClickable(true);
        return false;
      }
    },

    subscribeForContextMenu: function (element) {
      $(element).on('contextmenu', function (e) {
        e.preventDefault();
        e.stopPropagation();
        e.stopImmediatePropagation();

        return false;
      })
    },

    handleMouseDown: function () {
      var that = this;

      $(this.contentWrapper).on('mousedown touchstart', this.userNameSelector, function (e) {
        if (e.which !== 1 && e.type !== 'touchstart') {
          return false;
        }

        that.targetElement = e.currentTarget;

        that.subscribeForContextMenu(that.targetElement);
        that.handleFocusLost(e.currentTarget);

        that.timeout = setTimeout(function () {
          if (e.type !== 'touchstart') {
            that.setClickable(false);
            that.subscribeForUserNameClick();
          } else {
            $(e.currentTarget).off('touchmove mouseleave');
          }

          that.subscribeForHideListeners();
          that.setRootElement();

          var userID = e.currentTarget.search.slice('?XID='.length);
          var props = { userID: userID, event: e.originalEvent };

          window.renderMiniProfile(that.rootElement, props);
        }, 500);
      })
    },

    handleMouseUp: function () {
      var that = this;

      $(this.contentWrapper).on('mouseup touchend', this.userNameSelector, function () {
        that.timeout && clearTimeout(that.timeout);
      })
    },

    handleFocusLost: function (element) {
      var that = this;

      $(element).on('touchmove mouseleave', function unsubscribe () {
        that.timeout && clearTimeout(that.timeout);
        $(this).off('touchmove mouseleave', unsubscribe)
      })
    },

    init: function () {
      this.handleMouseDown();
      this.handleMouseUp();
    }
  };

  profileMini.init();
});
